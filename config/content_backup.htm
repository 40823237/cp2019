<h1>計算機程式</h1>
<p><strong>計算機課程網頁:</strong><a href="http://mde.tw/cp2019">http://mde.tw/cp2019</a></p>
<p><strong>Dartpad:</strong><a href="https://dartpad.dev?id=68e451e4dcf5606a168856fdeca353d7">https://dartpad.dev?id=68e451e4dcf5606a168856fdeca353d7</a> </p>
<p><strong>我的倉儲:</strong><a href="https://gist.github.com/40823237">https://gist.github.com/40823237</a></p>
<p><img alt="" height="177" src="/images/69461404_2106641939640677_9044586021634703360_o.jpg" width="266"/></p>
<p style="text-align: left;"><span style="background-color: #ffcc99; color: #000000;">
<script>
function getDart(dirname){
    source = "https://dartpad.github.io/embed-dart.html?gh_owner=40823237&gh_repo=cp2019&gh_path=downloads/dart_ex/" + dirname + "&theme=dark";
    document.getElementById("iframe").src = source ;
}

function getHtmlDart(dirname){
    source = "https://dartpad.github.io/embed-html.html?gh_owner=40823237&gh_repo=cp2019&gh_path=downloads/dart_ex/" + dirname + "&theme=dark";
document.getElementById("iframe").src = source ;
}

function getFlutter(dirname){
    source = "https://dartpad.github.io/embed-flutter.html?gh_owner=40823237&gh_repo=cp2019&gh_path=downloads/dart_ex/" + dirname + "&theme=dark";
document.getElementById("iframe").src = source ;
}

function largest(){
document.getElementById("iframe").width = document.body.clientWidth ;
document.getElementById("iframe").height = document.body.clientWidth*0.5 ;
}

function original(){
document.getElementById("iframe").width = 800 ;
document.getElementById("iframe").height = 600 ;
}
</script>
<!-- 取 Dart 程式的按鈕 --></span></p>
<h4>純 Dart 程式</h4>
<p><button onclick="getDart('hello')">Hello</button> <button onclick="getDart('for')">For Loop</button> <button onclick="getDart('sum')">Sum</button> <button onclick="getDart('runge_kutta')">Runge-Kutta</button> <button onclick="getDart('rk_ex1')">RK ex1</button> <button onclick="getDart('mass_spring_damping')">Mass Spring Damping</button> <button onclick="getDart('function')">Function</button> <button onclick="getDart('fun_parameter')">Function Parameter</button> <button onclick="getDart('fat_arrow')">Fat Arrow</button> <button onclick="getDart('temp1')">Temp 1</button></p>
<h4>Html 程式</h4>
<p><button onclick="getHtmlDart('roc_flag')">ROC Flag</button> <button onclick="getHtmlDart('grid')">Grid</button> <button onclick="getHtmlDart('xyplot')">X-Y Plot</button> <button onclick="getHtmlDart('slithery')">Slithery</button></p>
<h4>Flutter 程式</h4>
<p><button onclick="getFlutter('flutter0')">Flutter0</button> <button onclick="getFlutter('flutter1')">Flutter1</button> <button onclick="getFlutter('flutter2')">Flutter2</button> <button onclick="getFlutter('flutter3')">Flutter3</button> <button onclick="getFlutter('flutter4')">Flutter4</button> <button onclick="getFlutter('flutter_counter')">Flutter Counter</button> <button onclick="getFlutter('flutter_roc')">ROC Flag</button> <button onclick="getFlutter('flutter_mine1')">踩地雷 1</button> <button onclick="getFlutter('flutter_mine2')">踩地雷 2</button> <button onclick="getFlutter('flutter_mine3')">踩地雷 3</button> <button onclick="getFlutter('flutter_mine4')">踩地雷 4</button> <button onclick="getFlutter('flutter_dropdown')">Dropdown</button> <button onclick="getFlutter('flutter_multiselect')">Multiselect</button> <button onclick="getFlutter('flutter_search')">Search</button> <button onclick="getFlutter('flutter_login')">Login</button> <button onclick="getFlutter('flutter_temp')">溫度轉換</button></p>
<p style="text-align: left;"><span style="background-color: #ffcc99; color: #000000;"><!-- 內建放入的 Dart 原始碼 --></span></p>
<p><button onclick="largest()">放大</button> <button onclick="original()">回復</button></p>
<p><iframe height="600" id="iframe" src="https://dartpad.dartlang.org/embed-dart.html?gh_owner=40823237&amp;gh_repo=cp2019&amp;gh_path=downloads/dart_ex/mass_spring_damping&amp;theme=dark" width="800"></iframe></p><h1>筆記</h1>
<h2>期末考</h2>
<p></p>
<script>
function getDart(dirname){
    source = "https://dartpad.github.io/embed-dart.html?gh_owner=40823237&gh_repo=cp2019&gh_path=downloads/dart_ex/" + dirname + "&theme=dark";
    document.getElementById("iframe").src = source ;
}

function getHtmlDart(dirname){
    source = "https://dartpad.github.io/embed-html.html?gh_owner=40823237&gh_repo=cp2019&gh_path=downloads/dart_ex/" + dirname + "&theme=dark";
document.getElementById("iframe").src = source ;
}

function getFlutter(dirname){
    source = "https://dartpad.github.io/embed-flutter.html?gh_owner=40823237&gh_repo=cp2019&gh_path=downloads/dart_ex/" + dirname + "&theme=dark";
document.getElementById("iframe").src = source ;
}

function largest(){
document.getElementById("iframe").width = document.body.clientWidth ;
document.getElementById("iframe").height = document.body.clientWidth*0.5 ;
}

function original(){
document.getElementById("iframe").width = 800 ;
document.getElementById("iframe").height = 600 ;
}
</script>
<!-- 取 Dart 程式的按鈕 -->
<h4>純 Dart 程式</h4>
<p><button onclick="getDart('weight')">重量</button></p>
<h4>Html 程式</h4>
<p><button onclick="getHtmlDart('weight_change')">重量轉換</button> <button onclick="getHtmlDart('national_flag')">各國國旗</button></p>
<!-- 內建放入的 Dart 原始碼 -->
<p><button onclick="largest()">放大</button> <button onclick="original()">回復</button></p>
<p><iframe height="600" id="iframe" src="https://dartpad.dartlang.org/embed-dart.html?gh_owner=40823237&amp;gh_repo=cp2019&amp;gh_path=downloads/dart_ex/weight&amp;theme=dark" width="800"></iframe></p>
<p>請輸入所要轉換的重量以數字加上 KG 或 LB:<br/><input id="weight" max="30" min="0" type="text" value="10KG"/> <input id="submit" type="button" value="換算"/><br/> <br/>轉換結果:<br/><br/><label id="output"></label></p>
<p>
<script src="https://40823237.github.io/cp2019/downloads/dart_ex/weight_change/weight_change.js"></script>
</p>
<p><canvas height="200" id="canvas" width="300"></canvas></p>
<p><button id="button">Clear Canvas</button> <button id="roc">Draw ROC</button> <button id="jpn">Draw JPN</button> <button id="fra">Draw FRA</button> <button id="rus">Draw RUS</button> <button id="usa">Draw USA</button> <button id="uk">Draw UK</button> <button id="deu">Draw DEU</button> <button id="nld">Draw NLD</button></p>
<p>
<script src="https://40823237.github.io/cp2019/downloads/dart_ex/national_flag/national_flag.js"></script>
</p><h2>查驗考試</h2>
<p>W16 查驗考試-報告影片</p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/0OgqPplJQec" width="560"></iframe></p><h2>溫度轉換</h2>
<p>攝氏celsius = 5/9 ( 華氏fahrenheit − 32)</p>
<script>
function getDart(dirname){
    source = "https://dartpad.github.io/embed-dart.html?gh_owner=mdecourse&gh_repo=cp2019&gh_path=downloads/dart_ex/" + dirname + "&theme=dark";
    document.getElementById("iframe").src = source ;
}

function getHtmlDart(dirname){
    source = "https://dartpad.github.io/embed-html.html?gh_owner=mdecourse&gh_repo=cp2019&gh_path=downloads/dart_ex/" + dirname + "&theme=dark";
document.getElementById("iframe").src = source ;
}

function getFlutter(dirname){
    source = "https://dartpad.github.io/embed-flutter.html?gh_owner=mdecourse&gh_repo=cp2019&gh_path=downloads/dart_ex/" + dirname + "&theme=dark";
document.getElementById("iframe").src = source ;
}

function largest(){
document.getElementById("iframe").width = document.body.clientWidth ;
document.getElementById("iframe").height = document.body.clientWidth*0.5 ;
}

function original(){
document.getElementById("iframe").width = 800 ;
document.getElementById("iframe").height = 600 ;
}
</script>
<!-- 取 Dart 程式的按鈕 -->
<h4>純 Dart 程式</h4>
<p><button onclick="getDart('temp1')">Temp 1</button></p>
<h4>Html 程式</h4>
<p><button onclick="getHtmlDart('temp2')">Temp 2</button> <button onclick="getHtmlDart('ajax2')">Python</button></p>
<h4>Flutter 程式</h4>
<p><button onclick="getFlutter('flutter_temp')">溫度轉換</button></p>
<p><!-- 內建放入的 Dart 原始碼 --></p>
<p><button onclick="largest()">放大</button> <button onclick="original()">回復</button></p>
<p><iframe height="600" id="iframe" src="https://dartpad.dartlang.org/embed-dart.html?gh_owner=mdecourse&amp;gh_repo=cp2019&amp;gh_path=downloads/dart_ex/temp1&amp;theme=dark" width="800"></iframe></p>
<p><strong>原始碼:</strong></p>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false">import flask
# 導入 flask_cors 模組中的 CORS
# 目的在讓伺服器可以被遠端的 Dart 程式跨網域擷取資料
from flask_cors import CORS
 
app = flask.Flask(__name__)
# 讓應用程式啟動後, 可以跨網域被截取資料
CORS(app, support_credentials=False)
global data
 
@app.route('/', methods =['POST', 'GET'])
def root():
    if flask.request.method == 'POST': 
        data = flask.request.form['data'] 
        print(data)
        resp = {"data": data}
        output = flask.json.dumps(data)
    else:
        # 將 Python 中的 dictionary 資料透過 json 格式送出後
        # 讓遠端的 Dart 程式可以擷取
        data = {"a": 1, "b": data+"yen", "c": "字串"}
        output = flask.json.dumps(data)
    return output
     
@app.route('/&lt;name&gt;', methods=['POST', 'GET'])
def convert(name):
    #name[-1] 為字串最後一個字元
    # name[:-1] 則為數字
    if name[-1] is "F" or name[-1] is "f":
        # 表示要將華氏溫度轉為攝氏
        return FtoC(name[:-1])
    else:
        return CtoF(name[:-1])
     
#celsius = 5/9 ( fahrenheit − 32)
#定義一個 celsius 轉 fahrenheit  函式
def CtoF(c):
    return "攝氏" + c + "度=華氏" + str(round(int(c)*9/5 + 32, 2)) + "度"
 
#定義一個 celsius 轉 fahrenheit  函式
def FtoC(f):
    return "華氏" + f + "度=攝氏" + str(round((int(f) - 32)*5/9, 2)) + "度"
 
 
if __name__ == '__main__':
    # 內建的 Flask Web 啟動埠號為 5000
    app.run()</pre>
<p></p><h2>Hello</h2>
<p><span style="background-color: #ffff99;"><strong>原始碼:</strong></span></p>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false">void main() {
   print("哈囉!");
}</pre>
<p><span style="background-color: #ffff99;"><strong>dartpad:</strong></span></p>
<p><iframe height="400" src="https://dartpad.dev/embed-inline.html?id=ecd34f53b4b395ed0fef6ae2c937f89e&amp;split=80&amp;theme=dark" width="500"></iframe></p>
<p></p><h2>sum</h2>
<p><span style="background-color: #ffff99;"><strong>原始碼:</strong></span></p>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false">int i;
int sum;

main(){
  sum = 0;
  for(i=1;i &lt;= 10 ;i++){
    sum += i;
    print("$sum");
  }
  print('sum = $sum');
}
</pre>
<p><span style="background-color: #ffff99;"><strong>dartpad:</strong></span><br/><br/><iframe height="400" src="https://dartpad.dev/embed-inline.html?id=7dd6848df25679103734f72f44602625&amp;split=80&amp;theme=dark" width="500"></iframe></p><h2>for loop</h2>
<p><span style="background-color: #ffff99;"><strong>原始碼:</strong></span></p>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false">// 在所有函式定義外圍所宣告的變數, 稱為全域變數, 有效範圍包含各函式內部與外部
// for 迴圈所使用的索引值, 宣告為整數 (integer)
int i;
// 累加起始值 start 宣告為整數, 且設為 1
int start = 1;
// 累加終止值 end 宣告為整數, 且設為 10
int end = 10;
// 累加總數值 sum 宣告為整數
int sum;

// 定義 main() 主函式內容, 目的在利用 for 迴圈進行整數的累加
main(){
  // 將前面已經宣告為全域整數的變數 sum 設為 0, 表示從 0 開始進行累加
  sum = 0;
  // 執行 for 迴圈內的整數累加設計, 使用前面已經宣告為全域整數的 i 作為索引變數
  // 分別從 start 開始累加至 end, 且每次迴圈的索引值增加 1
  for(i=start;i &lt;= end ;i++){
    // 當索引變數 i 所對應的值小於或等於 end 時, 對 sum 變數加上 i
    sum += i;
    // 可以在 for 迴圈每一個階段運算時, 列出當時的 sum 對應值, 查驗是否正確
    //print("$sum");
  }
  // for 迴圈累加完成後, 列出最後訊息
  print('從 $start 累加至 $end 的總數值為 $sum');
}</pre>
<p><span style="background-color: #ffff99;"><strong>dartpad:</strong></span></p>
<p><iframe height="400" src="https://dartpad.dev/embed-inline.html?id=71e7e78f08778a92f0e700458cef24d0&amp;split=80&amp;theme=dark" width="500"></iframe></p><h2>Mass-Spring-Damping</h2>
<p><span style="background-color: #ffff99;"><strong>原始碼:</strong></span></p>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false">// 下列 Dart 程式, 利用 Runge Kutta 迭代運算法, 解常微分方程式
// 設 t 為時間, x 則設為物體的位移
// 假設要解 F=ma 的單一質量加上彈簧 (常數為 k) 與黏滯阻尼 (常數為 b)
// f 為沿位移方向的施力
// dx/dt = v, dv/dt = (f-kx-bv)/m
// dx / dt = (t - x)/2, 起始值 t0=0, x0=1, 求 t=2 時的 x 值
//
// 已知起始值 t0 與 x0 後, 可以利用下列 rungeKutta 函式, 以
// h 為每步階增量值, 求 dxdt 常微分方程式任一 t 的對應值 x
// 定義函式 rungeKutta, 共有四個輸入變數
// 物體質量
const num m = 1;
// 對質量的施力 f
const num f = 0.0;
// 彈簧係數
const num k = 1;
// 阻尼係數
const num b = 1;

// 呼叫運算時, 需要起始時間, 終點時間, 位移起始值與速度起始值, 增量 h
rungeKutta(t0, x0, v0, t, h) {
  // 利用步階增量值 h 與 t 的起始及終點值
  // 計算需要迭代的次數 n
  int n = ((t - t0) / h).toInt();
  // 宣告 x 為雙浮點數, 且設為起始值 x0
  double x = x0;
  // 宣告 v 為雙浮點數, 且設為起始值 v0
  double v = v0;

  // 模擬運算前, 列出起始條件
  // 只列到小數點第三位, 時間、位移與速度以 \t  隔開, \t 代表插入 tab 符號, 可將資料複製到 Excel 進行繪圖
  print("${t0.toStringAsFixed(3)} \t ${x.toStringAsFixed(3)} \t ${v.toStringAsFixed(3)}");

  // 利用已知的 t0, x0, t 終點值與步階增量值 h, 迭代求 x 對應值
  // 索引值 i 將每次增量 1, 從 i=1 執行 for 環圈至 i=n
  for (int i = 1; i &lt;= n; i++) {
    // 將此階段的 t 與 x 值代入 dxdt 與 dvdt 函式求下列四個浮點變數值
    // 因為必須兩個函式耦合, 必須同時計算
    double xk1 = h * dxdt(t0, x, v);
    double vk1 = h * dvdt(t0, x, v);
    double xk2 = h * dxdt(t0 + 0.5 * h, x + 0.5 * xk1, v + 0.5 * vk1);
    double vk2 = h * dvdt(t0 + 0.5 * h, x + 0.5 * xk1, v + 0.5 * vk1);
    double xk3 = h * dxdt(t0 + 0.5 * h, x + 0.5 * xk2, v + 0.5 * vk2);
    double vk3 = h * dvdt(t0 + 0.5 * h, x + 0.5 * xk2, v + 0.5 * vk2);
    double xk4 = h * dxdt(t0 + h, x + xk3, v + vk3);
    double vk4 = h * dvdt(t0 + h, x + xk3, v + vk3);
    // 利用上述四個變數值求此步階增量後的對應 x 值
    x = x + (1.0 / 6.0) * (xk1 + 2 * xk2 + 2 * xk3 + xk4);
    v = v + (1.0 / 6.0) * (vk1 + 2 * vk2 + 2 * vk3 + vk4);
    // 每次 for 迴圈執行最後, 準備計算下一個步階增量後的 x 對應值
    // t 起始值配合步階增量值 h, 進行增量
    t0 = t0 + h;
    // 列出各模擬運算時間點所得到的結果
    // 只列到小數點第三位, 時間、位移與速度以 \t  隔開, \t 代表插入 tab 符號, 可將資料複製到 Excel 進行繪圖
  print("${t0.toStringAsFixed(3)} \t ${x.toStringAsFixed(3)} \t ${v.toStringAsFixed(3)}");
  }

  // 完成 for 迴圈迭代後, 傳回與 t 終點值對應的 x 值
  return [x, v];
}

// 將微分方程式 "dx / dt = v" 定義為 dxdt 函式
dxdt(t, x, v) {
  return v;
}

// dx/dt = v, dv/dt = (f-kx-bv)/m
dvdt(t, x, v) {
  return (f - k * x - b * v) / m;
}

// 定義 main() 主函式內容, 目的在利用 rungeKutta 函式
// 解常微分方程式
main() {
// Driver method
// num 資料型別可以是整數或雙浮點數
  num t0 = 0;
  num x0 = 1;
  num v0 = 0;
  num t = 5;
  double h = 0.1;
  rungeKutta(t0, x0, v0, t, h);
}</pre>
<p><span style="background-color: #ffff99;"><strong>dartpad:</strong></span></p>
<p><iframe height="400" src="https://dartpad.dev/embed-inline.html?id=99f2e82e8486dafa336acf293c9866f5&amp;split=80&amp;theme=dark" width="500"></iframe></p>
<p><span style="background-color: #ffff99;"><strong>曲線圖:</strong></span></p>
<p><img alt="" height="301" src="/images/1.PNG" width="503"/></p>
<p><img alt="" height="301" src="/images/擷取.PNG" width="501"/></p>
<p><span></span></p>